CREATE DATABASE ONLINE_BOOKSTORE;

SELECT * FROM BOOKS;
SELECT * FROM CUSTOMERS;
SELECT * FROM ORDERS;

# 1 RETRIEVE ALL BOOKS IN THE "FICTION" GENRE.
SELECT * FROM books WHERE Genre="fiction";

# 2 FIND BOOKS PUBLISHED AFTER THE YEAR 1950.
SELECT * FROM BOOKS 
WHERE Published_year>1950;

# 3 LIST ALL THE CUSTOMERS FROM CANADA.
SELECT * FROM customers 
WHERE Country = "CANADA";

# 4 SHOW ORDERS PLACED IN NOVEMBER 2023.
SELECT * FROM orders 
WHERE ORDER_DATE BETWEEN"2023-11-01" AND "2023-11-30";

# 5 RETRIEVE THE TOTAL STOCK OF BOOKS AVAILABLE.
 SELECT SUM(stock) AS TOTAL_STOCK FROM books;
 
# 6 FIND THE DETAILS OF THE MOST EXPENSIVE BOOK.
 SELECT * FROM books 
 ORDER BY Price DESC LIMIT 1;
 
# 7 SHOW ALL CUSTOMERS WHO ORDERED MORE THAN 1 QUANTITY OF A BOOK.
 SELECT * FROM orders 
 WHERE quantity >1;
 
# 8 RETRIEVE ALL ORDERS WHERE THE TOTAL AMOUNT EXCEEDS $20.
 SELECT * FROM orders 
 WHERE total_amount>20;
 
# 9 LIST ALL THE GENRES AVAILABLE IN THE BOOKS TABLE.
 SELECT DISTINCT GENRE FROM BOOKS ;
 
# 10 FIND THE BOOK WITH THE LOWEST STOCK.
SELECT * FROM books ORDER BY stock LIMIT 1 ;

# 11 CALCULATE THE TOTAL REVENUE GENERATED FROM ALL ORDERS.
SELECT ROUND(SUM(total_amount))from orders;

# 12 RETRIEVE THE TOTAL NUMBER OF BOOKS SOLD FOR EACH GENRE.
SELECT b.Genre , SUM(o.quantity) as Total_Books_Sold
FROM orders o
JOIN books b
ON  o.Book_ID=b.Book_ID
GROUP BY b.Genre;

# 13 FIND THE AVERAGE PRICE OF BOOKS IN THE "FANTASY" GENRE.
SELECT AVG(price) as avg_price FROM books WHERE genre="fantasy";

# 14 LIST CUSTOMERS WHO HAVE PLACED AT LEAST 2 ORDERS.
SELECT o.customer_id ,c.name,COUNT(o.order_id) AS ORDER_COUNT
FROM orders o
JOIN customers c
ON o.customer_id=c.customer_id
GROUP BY o.customer_id,c.name
HAVING COUNT(o.order_id)>=2;

# 15 FIND THE MOST FREQUENTLY ORDERED BOOK.
SELECT o.book_id, b.title,COUNT(o.order_id) AS ORDER_COUNT
FROM ORDERS o
JOIN books b ON o.book_id=b.book_id
GROUP BY o.BOOK_ID,b.title 
ORDER BY ORDER_COUNT DESC LIMIT 1;

# 16 SHOW THE TOP 3 MOST EXPENSIVE BOOKS OF "FANTASY" GENRE.
SELECT * FROM books 
WHERE genre = "fantasy"
ORDER BY price DESC LIMIT 3;

# 17 RETRIEVE THE TOTAL QUANTITY OF BOOKS SOLD BY EACH AUTHOR.
SELECT b.author, SUM(o.quantity) AS Total_Books_Sold
FROM orders o
JOIN books b
ON o.book_id= b.book_id
GROUP BY b.author;

# 18 LIST THE CITIES WHERE CUSTOMERS WHO SPENT OVER $30 ARE LOCATED.
SELECT DISTINCT c.city,	total_amount
FROM orders o
JOIN customers c ON o.customer_id=c.customer_id
WHERE o.total_amount> 30;

# 19 FIND THE CUSTOMERS WHO SPENT THE MOST ON ORDERS.
SELECT c.customer_id,c.name, sum(total_amount) as total_spent
FROM orders o
JOIN  customers c
ON o.customer_id=c.Customer_ID
GROUP BY c.Customer_ID,c.name 
ORDER BY total_spent DESC LIMIT 1;

# 20 CALCULATE THE STOCK REMAINING AFTER FULFILLING ALL ORDERS.
SELECT b.book_id, b.title, b.stock, COALESCE(SUM(o.quantity),0) as Order_quantity,
     b.stock- COALESCE(SUM(o.quantity),0) AS Remaining_Quantity 
FROM books b
LEFT JOIN orders o ON b.book_id=o.book_id   
GROUP BY b.book_id;  





 
 

